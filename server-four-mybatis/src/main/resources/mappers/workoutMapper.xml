<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.exercise.app.exerciseappserver.workout.WorkoutMapper">

    <insert id="insertWorkout" parameterType="com.exercise.app.exerciseappserver.workout.WorkoutDao"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO workout (name, description) VALUES (#{name}, #{description})
    </insert>

    <insert id="insertWorkoutExercise" parameterType="com.exercise.app.exerciseappserver.workout.WorkoutExerciseDto">
        INSERT INTO workout_exercise (workout_id, exercise_id,sequence_no) VALUES (#{workoutId},
        #{exerciseId},#{sequenceNo})
    </insert>


    <resultMap id="workoutResultMap" type="com.exercise.app.exerciseappserver.workout.WorkoutDao">
        <id property="id" column="workout_id"/>
        <result property="name" column="workout_name"/>
        <result property="description" column="workout_description"/>
        <collection property="exerciseDaoList" ofType="com.exercise.app.exerciseappserver.workout.ExerciseDao">
            <!--  VERY IMPORTANT: collection itself is a result map,hence it will NOT HAVE DUPLICATE VALUES      -->
            <!-- In this case if you want to have all exercise list, then you must select a field which is unique. (as if you select exercise_id  as id => in the map only 1 of such entry will be present -->
            <id property="sequenceNo" column="sequence_no"/>
            <result property="id" column="exercise_id"/>
        </collection>
    </resultMap>

    <!--    <select id="getWorkout" parameterType="java.lang.Long" resultType="com.exercise.app.exerciseappserver.workout.WorkoutDao">-->
    <!--        SELECT * FROM workout WHERE id = #{id}-->
    <!--    </select>-->

    <select id="getWorkoutWithResultMap" parameterType="java.lang.Long" resultMap="workoutResultMap">
        SELECT w.id AS workout_id, w.name AS workout_name, w.description AS workout_description,
        we.exercise_id AS exercise_id,
        we.sequence_no AS sequence_no
        FROM workout w
        JOIN workout_exercise we ON w.id = we.workout_id
        WHERE w.id = #{workoutId}
    </select>

    <select id="getWorkoutWithAggList" parameterType="java.lang.Long" resultType="com.exercise.app.exerciseappserver.workout.WorkoutDao">
        SELECT w.id ,w.name , w.description,
        string_agg(we.exercise_id::text,',') AS  aggExerciseList
        FROM workout w
        LEFT JOIN workout_exercise we ON w.id = we.workout_id
        WHERE w.id = #{workoutId}
        GROUP BY(w.id ,w.name , w.description)
    </select>

    <select id="getWorkout3" parameterType="java.lang.Long" resultType="com.exercise.app.exerciseappserver.workout.WorkoutDao">
        SELECT w.id AS workout_id, w.name AS workout_name, w.description AS workout_description,
        string_agg(we.exercise_id::text,  ',') AS hello_list
        FROM workout w
        LEFT JOIN workout_exercise we ON w.id = we.workout_id
        WHERE w.id = #{workoutId}
        GROUP BY w.id, w.name, w.description
    </select>



</mapper>






